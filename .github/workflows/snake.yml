name: GitHub Snake Game

on:
  schedule:
    - cron: "0 0 * * *"  # Runs daily at midnight UTC
  workflow_dispatch:     # Allows manual triggering
  push:
    branches:
      - main             # Triggers on pushes to the main branch

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetches entire commit history for contribution graph

      # Step 2: Generate the snake animations
      - name: Generate GitHub Contributions Snake Animations
        uses: Platane/snk@v3
        id: generate-snake
        with:
          github_user_name: ${{ github.repository_owner }}  # GitHub username to generate the animation for
          outputs: |    # Define the output files and their configurations
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark
            dist/ocean.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Verify the output files
      - name: Verify Output Files
        run: |
          ls -la dist/
          [ -f dist/github-snake.svg ] || exit 1
          [ -f dist/github-snake-dark.svg ] || exit 1
          [ -f dist/ocean.gif ] || exit 1

      # Step 4: Deploy the generated files to the 'output' branch
      - name: Deploy to Output Branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: output
          commit_message: "Update snake animation [skip ci]"   # Optionally, you can set a custom commit message
          keep_files: false  # Clean the branch before deploying
