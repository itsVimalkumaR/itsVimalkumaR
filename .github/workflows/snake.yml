name: GitHub Snake Game

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Get full history for contributions

      - name: Setup Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils

      - name: Clean Workspace
        run: |
          mkdir -p dist
          rm -rf dist/* || true

      - name: Generate Snake Animation
        uses: Platane/snk@v3
        id: generate
        continue-on-error: false
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-contributions.svg
            dist/github-contributions-dark.svg?palette=github-dark
            dist/github-contributions.gif?color_snake=orange
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Rate Limits
        if: always()  # Runs even if the previous step fails
        run: |
          echo "=== GITHUB API RATE LIMITS ==="
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/rate_limit | jq .resources.graphql

      - name: Debug API Response
        if: failure()  # Only runs if generation failed
        run: |
          echo "=== DEBUGGING API RESPONSE ==="
          echo "Repository Owner: ${{ github.repository_owner }}"
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/users/${{ github.repository_owner }}/events?per_page=1" | jq .

      - name: Validate Outputs
        if: always()
        run: |
          echo "=== DEBUG OUTPUT ==="
          ls -la dist/
          echo "=== FILE CHECKS ==="
          [ -f dist/github-contributions.svg ] || { echo "SVG missing"; exit 1; }
          [ -f dist/github-contributions-dark.svg ] || { echo "Dark SVG missing"; exit 1; }
          [ -f dist/github-contributions.gif ] || { echo "GIF missing"; exit 1; }
          echo "=== XML VALIDATION ==="
          xmllint --noout dist/github-contributions.svg || { echo "Invalid SVG"; exit 1; }

      - name: Deploy to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: output
          commit_message: "Update snake animation [skip ci]"
          keep_files: false
